{"version":3,"sources":["Compontents/SidebarElem.js","Images/LOGO.svg","Images/home-solid.svg","Images/walking-solid.svg","Images/radar.svg","Images/trap-solid.svg","Images/cog-solid.svg","Images/check-solid.svg","Images/wrong-solid.svg","Compontents/Sidebar.js","Compontents/ButtonA.js","Compontents/ButtonLink.js","Compontents/ExploreContent.js","Images/globe-solid.svg","Images/walking-icon.svg","Images/radar-icon.svg","Images/trap-icon.svg","Images/cog-icon.svg","Compontents/Home.js","Compontents/Setting.js","Images/ip-icon.svg","Compontents/GetSubtreeSet.js","Compontents/InformationContent.js","Compontents/ReplyTableElement.js","Images/get-icon.svg","Images/tree-icon.svg","Images/set-icon.svg","Compontents/MainInput.js","Compontents/IpInput.js","Compontents/ReplyTable.js","Images/codeicon.svg","Images/position-icon.svg","Images/contact-icon.svg","Images/write-icon.svg","Images/time-icon.svg","Images/finger-icon.svg","Compontents/GetSubtreeSetIp.js","Images/scan-radar-icon.svg","Compontents/NetworkInput.js","Compontents/ScanNetworkTable.js","Compontents/ScanNetworkTableElement.js","Compontents/ScanNetwork.js","Compontents/ErrorLeiste.js","Compontents/TrapsTable.js","Compontents/TrapsTableElement.js","Compontents/Traps.js","App.js","index.js"],"names":["SidebarElem","props","to","link","className","url","onClick","e","console","log","setUrl","src","img","alt","title","Sidebar","available","setAvailable","match","fetchData","fetch","then","response","json","data","catch","err","useEffect","setInterval","logo","home","walk","radar","trap","cog","check","wrong","Button","href","valid","preventDefault","ButtonLink","ExploreContent","description","Home","globe","index","Setting","timeout","setTimeouts","useState","isNumber","setIsNumber","a","isNaN","type","value","onChange","target","GetSubtreeSet","setValid","input","setInput","inputChange","setInputChange","ipaddress","test","validateIPaddress","localStorage","getItem","setItem","text","IpIcon","placeholder","InformationContent","setValue","name","s","ms","secs","mins","msToTime","oid","ReplyTableElement","ip","toLowerCase","MainInput","tableContent","setTableContent","fetchBasics","oidInput","setOidInput","oidChange","setOidChange","valueInput","setValueInput","valueChange","setValueChange","communityInput","setCommunityInput","Math","random","map","element","status","loadLocalStorage","getIcon","treeIcon","setIcon","IpInput","buttonTitle","ReplyTable","GetSubtreeSetIp","basicContainers","setBasicContainers","reachable","setReachable","key","setKey","images","computer","position","contact","write","time","finger","params","snmp","i","checkSnmp","NetworkInput","setLoading","changeInput","setChangeInput","id","ScanNetworkTable","loading","ScanNetworkTableElement","network","ScanNetwork","host","ErrorLeiste","TrapsTable","TrapsTableElement","Traps","varbinds","App","window","location","pathname","includes","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.46f137b9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function SidebarElem(props) {\r\n    function clickLink(e) {\r\n        console.log(props.link);\r\n        props.setUrl(props.link);\r\n    }\r\n\r\n    return (\r\n        <Link\r\n            to={props.link}\r\n            className={\r\n                props.url === props.link\r\n                    ? \"sidebarElement selected\"\r\n                    : \"sidebarElement\"\r\n            }\r\n            onClick={clickLink}\r\n        >\r\n            <div className=\"imgContainer\">\r\n                <img src={props.img} alt={props.alt} />\r\n            </div>\r\n            <h4>{props.title}</h4>\r\n            <div className=\"marker\"></div>\r\n        </Link>\r\n    );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/LOGO.7b27e9d7.svg\";","export default __webpack_public_path__ + \"static/media/home-solid.831db11d.svg\";","export default __webpack_public_path__ + \"static/media/walking-solid.67a45e73.svg\";","export default __webpack_public_path__ + \"static/media/radar.c56f6453.svg\";","export default __webpack_public_path__ + \"static/media/trap-solid.917ff117.svg\";","export default __webpack_public_path__ + \"static/media/cog-solid.540ab5dc.svg\";","export default __webpack_public_path__ + \"static/media/check-solid.4c2f928b.svg\";","export default __webpack_public_path__ + \"static/media/wrong-solid.bb165322.svg\";","import React, { useEffect, useState } from \"react\";\r\nimport SidebarElem from \"./SidebarElem\";\r\nimport \"../Style/SideBar.css\";\r\n\r\nimport logo from \"../Images/LOGO.svg\";\r\nimport home from \"../Images/home-solid.svg\";\r\nimport walk from \"../Images/walking-solid.svg\";\r\nimport radar from \"../Images/radar.svg\";\r\nimport trap from \"../Images/trap-solid.svg\";\r\nimport cog from \"../Images/cog-solid.svg\";\r\nimport check from \"../Images/check-solid.svg\";\r\nimport wrong from \"../Images/wrong-solid.svg\";\r\n\r\nexport default function Sidebar({\r\n    url,\r\n    setUrl,\r\n    available,\r\n    setAvailable,\r\n    match,\r\n}) {\r\n    useEffect(() => {\r\n        fetchData();\r\n\r\n        setInterval(() => {\r\n            fetchData();\r\n        }, 1000);\r\n    }, []);\r\n\r\n    function fetchData() {\r\n        fetch(`http://localhost:3001/check`)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                if (data) {\r\n                    if (!available) setAvailable(true);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                setAvailable(false);\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"logoContainer\">\r\n                <img src={logo} alt=\"snmp web logo\" className=\"logo\" />\r\n            </div>\r\n            <SidebarElem\r\n                link={\"/SNMP-REACT-Client/\"}\r\n                img={home}\r\n                title=\"Home\"\r\n                alt=\"home\"\r\n                url={url}\r\n                setUrl={setUrl}\r\n            />\r\n            <SidebarElem\r\n                link={\"/getSubtreeSet\"}\r\n                img={walk}\r\n                title=\"Get, Set, Subtree\"\r\n                alt=\"Person\"\r\n                url={url}\r\n                setUrl={setUrl}\r\n            />\r\n            <SidebarElem\r\n                link={\"/scanNetwork\"}\r\n                img={radar}\r\n                title=\"Scan Network\"\r\n                alt=\"Radar\"\r\n                url={url}\r\n                setUrl={setUrl}\r\n            />\r\n            <SidebarElem\r\n                link={\"/traps\"}\r\n                img={trap}\r\n                title=\"Traps\"\r\n                alt=\"Trap\"\r\n                url={url}\r\n                setUrl={setUrl}\r\n            />\r\n            <SidebarElem\r\n                link={\"/settings\"}\r\n                img={cog}\r\n                title=\"Setting\"\r\n                alt=\"Cog\"\r\n                url={url}\r\n                setUrl={setUrl}\r\n            />\r\n\r\n            <div className=\"connection sidebarElement\">\r\n                <h4>Connection</h4>\r\n                <div className=\"imgContainer\">\r\n                    {available ? (\r\n                        <img src={check} alt=\"ok\" />\r\n                    ) : (\r\n                        <img src={wrong} alt=\"ok\" />\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Button(props) {\r\n    function check(e) {\r\n        console.log(props.valid);\r\n        if (typeof props.valid !== \"undefined\") {\r\n            if (!props.valid) {\r\n                e.preventDefault();\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <a className=\"buttonLink\" href={props.link} onClick={check}>\r\n                {props.title}{\" \"}\r\n            </a>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function ButtonLink(props) {\r\n    function check(e) {\r\n        if (typeof props.valid !== \"undefined\") {\r\n            if (!props.valid) {\r\n                e.preventDefault();\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to={props.link}>\r\n                <button className=\"buttonLink\" onClick={check}>\r\n                    {props.title}{\" \"}\r\n                </button>\r\n            </Link>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport ButtonLink from \"./ButtonLink\";\r\n\r\nexport default function ExploreContent(props) {\r\n    return (\r\n        <div className=\"exploreContent contentContainer\">\r\n            <img src={props.src} alt={props.alt} />\r\n            <div className=\"description\">\r\n                <h3>{props.title}</h3>\r\n                <p>{props.description}</p>\r\n            </div>\r\n            <ButtonLink title=\"See more\" link={props.link}/>\r\n        </div>\r\n    );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/globe-solid.a382b530.svg\";","export default __webpack_public_path__ + \"static/media/walking-icon.f073ca42.svg\";","export default __webpack_public_path__ + \"static/media/radar-icon.58a442cd.svg\";","export default __webpack_public_path__ + \"static/media/trap-icon.4b4d08ac.svg\";","export default __webpack_public_path__ + \"static/media/cog-icon.55787e54.svg\";","import React from \"react\";\r\nimport \"../Style/Main.css\";\r\nimport Button from \"./ButtonA\";\r\nimport ExploreContent from \"./ExploreContent\";\r\nimport globe from \"../Images/globe-solid.svg\";\r\nimport walk from \"../Images/walking-icon.svg\";\r\nimport radar from \"../Images/radar-icon.svg\";\r\nimport trap from \"../Images/trap-icon.svg\";\r\nimport cog from \"../Images/cog-icon.svg\";\r\n\r\nexport default function Home() {\r\n    return (\r\n        <div className=\"main\">\r\n            <h1>Home</h1>\r\n            <div className=\"container\">\r\n                <div className=\"presentation contentContainer\">\r\n                    <h3>SNMP Web</h3>\r\n                    <p>a simple and free monitoring tool</p>\r\n                    <div className=\"left\">\r\n                        <img src={globe} alt=\"Globe\" />\r\n                        <div className=\"downloadContainer\">\r\n                            <p>Download the \"SNMP WEB Server\" here</p>\r\n                            <Button\r\n                                title=\"Download\"\r\n                                link=\"https://github.com/beniaminterza/SNMP-Tool-Node\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <h2>Functionality</h2>\r\n                <div className=\"exploreContainers\">\r\n                    <ExploreContent\r\n                        src={walk}\r\n                        title=\"Get, Subtree and Walk\"\r\n                        description=\"Do a subtree or a get or a set with any IP Address and \r\n                        any OID \"\r\n                        index=\"e1\"\r\n                        link=\"/getSubtreeSet\"\r\n                    />\r\n                    <ExploreContent\r\n                        src={radar}\r\n                        title=\"Scan Network\"\r\n                        description=\"Scan a network to see all the devices that use SNMP\"\r\n                        index=\"e2\"\r\n                        link=\"/scanNetwork\"\r\n                    />\r\n                    <ExploreContent\r\n                        src={trap}\r\n                        title=\"Traps\"\r\n                        description=\"Receive all the traps\"\r\n                        index=\"e3\"\r\n                        link=\"/traps\"\r\n                    />\r\n                    <ExploreContent\r\n                        src={cog}\r\n                        title=\"Settings\"\r\n                        description=\"Change settings so that they fit to your preferences\"\r\n                        index=\"e4\"\r\n                        link=\"/settings\"\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nexport default function Setting({ timeout, setTimeouts }) {\r\n    const [isNumber, setIsNumber] = useState(true);\r\n\r\n    useEffect(() => {\r\n        if (isNaN(timeout) || timeout === \"\") setIsNumber(false);\r\n        else setIsNumber(true);\r\n    }, [timeout]);\r\n\r\n    function timeoutChange(e) {\r\n        setTimeouts(e.target.value);\r\n    }\r\n\r\n    async function patchTimeout() {\r\n        if (isNumber) {\r\n            fetch(`http://localhost:3001/setTimeout/${timeout}`);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <h1>Settings</h1>\r\n\r\n            <div className=\"exploreContent contentContainer input timeout\">\r\n                <h3>SNMP Timeout</h3>\r\n                <p>Number of milliseconds to wait for a response before re-trying or failing</p>\r\n                <div className=\"timeoutInput\">\r\n                    <input\r\n                        type=\"text\"\r\n                        value={timeout}\r\n                        onChange={timeoutChange}\r\n                    />\r\n                    <h3>ms</h3>\r\n                </div>\r\n                <div className={isNumber ? \"validButton\" : \"novalidButton\"}>\r\n                    <button className=\"buttonLink\" onClick={patchTimeout}>\r\n                        Save\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/ip-icon.e6fd21ad.svg\";","import React, { useState, useEffect } from \"react\";\r\nimport ButtonLink from \"./ButtonLink\";\r\nimport IpIcon from \"../Images/ip-icon.svg\";\r\n\r\nexport default function GetSubtreeSet(props) {\r\n    const [valid, setValid] = useState(false);\r\n    const [input, setInput] = useState(\"\");\r\n    const [inputChange, setInputChange] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (validateIPaddress(input)) setValid(true);\r\n        else setValid(false);\r\n    }, [input]);\r\n\r\n    useEffect(() => {\r\n        props.setUrl(\"/getSubtreeSet\");\r\n        loadLocalStorage();\r\n    }, []);\r\n\r\n    function inputUpdate(e) {\r\n        setInputChange(true);\r\n        setInput(e.target.value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (inputChange) saveToLocalStorage();\r\n    }, [input]);\r\n\r\n    function validateIPaddress(ipaddress) {\r\n        if (\r\n            /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(\r\n                ipaddress\r\n            )\r\n        ) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function saveToLocalStorage() {\r\n        localStorage.setItem(\"IPInput\", input);\r\n    }\r\n\r\n    function loadLocalStorage() {\r\n        if (localStorage.getItem(\"IPInput\") !== \"undefined\") {\r\n            setInput(localStorage.getItem(\"IPInput\"));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <h1>Get, Subtree and Walk {props.text}</h1>\r\n\r\n            <div className=\"exploreContent input contentContainer\">\r\n                <img src={IpIcon} alt=\"IP icon\" />\r\n                <div className=\"description\">\r\n                    <h3>IP Address</h3>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"ex. 127.0.0.1\"\r\n                        onChange={inputUpdate}\r\n                        value={input}\r\n                    />\r\n                    <div className={valid ? \"validButton\" : \"novalidButton\"}>\r\n                        <ButtonLink\r\n                            title=\"Search\"\r\n                            link={`/getSubtreeSet/${input}`}\r\n                            valid={valid}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nexport default function InformationContent(props) {\r\n    const [value, setValue] = useState();\r\n\r\n    useEffect(() => {\r\n        if (props.name === \"sysUptime\") {\r\n            setValue(msToTime(props.value * 10));\r\n        } else {\r\n            setValue(props.value);\r\n        }\r\n    }, []);\r\n\r\n    function msToTime(s) {\r\n        var ms = s % 1000;\r\n        s = (s - ms) / 1000;\r\n        var secs = s % 60;\r\n        s = (s - secs) / 60;\r\n        var mins = s % 60;\r\n        var hrs = (s - mins) / 60;\r\n\r\n        return `${hrs}h ${mins}m ${secs}s ${ms}ms`\r\n    }\r\n\r\n    return (\r\n        <div className=\"informationsContent contentContainer\">\r\n            <img src={props.src} alt={props.alt} />\r\n            <div className=\"description\">\r\n                <h3>{props.name}</h3>\r\n                <p>{value}</p>\r\n                <div className=\"oid\">{props.oid}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function ReplyTableElement({ ip, oid, type, value }) {\r\n    return (\r\n        <tbody className={type.toLowerCase()}>\r\n            <tr >\r\n                <td>\r\n                    <p>{ip}</p>\r\n                </td>\r\n                <td>\r\n                    <p>{oid}</p>\r\n                </td>\r\n                <td>\r\n                    <p>{type}</p>\r\n                </td>\r\n                <td>\r\n                    <p>{value}</p>\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/get-icon.b952cb28.svg\";","export default __webpack_public_path__ + \"static/media/tree-icon.a474db26.svg\";","export default __webpack_public_path__ + \"static/media/set-icon.97fff500.svg\";","import React, { useState, useEffect } from \"react\";\r\nimport ReplyTableElement from \"./ReplyTableElement\";\r\nimport getIcon from \"../Images/get-icon.svg\";\r\nimport treeIcon from \"../Images/tree-icon.svg\";\r\nimport setIcon from \"../Images/set-icon.svg\";\r\n\r\nexport default function MainInput({\r\n    ip,\r\n    tableContent,\r\n    setTableContent,\r\n    fetchBasics,\r\n}) {\r\n    const [oidInput, setOidInput] = useState(\"\");\r\n    const [oidChange, setOidChange] = useState(false);\r\n    const [valueInput, setValueInput] = useState(\"\");\r\n    const [valueChange, setValueChange] = useState(false);\r\n    const [communityInput, setCommunityInput] = useState(\"public\");\r\n\r\n    function oidInputHandler(e) {\r\n        setOidChange(true);\r\n        setOidInput(e.target.value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (oidChange) saveOIDToLocalStorage();\r\n    }, [oidInput]);\r\n\r\n    function valueInputHandler(e) {\r\n        setValueChange(true);\r\n        setValueInput(e.target.value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (valueChange) saveValueToLocalStorage();\r\n    }, [valueInput]);\r\n\r\n    function communityInputHandler(e) {\r\n        setCommunityInput(e.target.value);\r\n    }\r\n\r\n    async function get() {\r\n        const url = `http://localhost:3001/get/${ip}/${oidInput}/${communityInput}`;\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        setTableContent([\r\n            <ReplyTableElement\r\n                ip={ip}\r\n                oid={data.oid}\r\n                type=\"GET\"\r\n                value={data.value}\r\n                key={Math.random() * 10000}\r\n            />,\r\n            ...tableContent,\r\n        ]);\r\n        console.log(data);\r\n    }\r\n\r\n    async function subtree() {\r\n        const url = `http://localhost:3001/subtree/${ip}/${oidInput}/${communityInput}`;\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        setTableContent([\r\n            data.map((element) => {\r\n                return (\r\n                    <ReplyTableElement\r\n                        ip={ip}\r\n                        oid={element.oid}\r\n                        type=\"SUBTREE\"\r\n                        value={element.value}\r\n                        key={Math.random() * 10000}\r\n                    />\r\n                );\r\n            }),\r\n            ...tableContent,\r\n        ]);\r\n        console.log(data);\r\n    }\r\n\r\n    async function set() {\r\n        const url = `http://localhost:3001/set/${ip}/${oidInput}/${valueInput}/${communityInput}`;\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        setTableContent([\r\n            <ReplyTableElement\r\n                ip={ip}\r\n                oid={data.oid}\r\n                type=\"SET\"\r\n                value={`Status: ${data.status}`}\r\n                key={Math.random() * 10000}\r\n            />,\r\n            ...tableContent,\r\n        ]);\r\n        console.log(data);\r\n        fetchBasics();\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadLocalStorage();\r\n    }, []);\r\n\r\n    function saveOIDToLocalStorage() {\r\n        localStorage.setItem(\"OID\", oidInput);\r\n    }\r\n\r\n    function saveValueToLocalStorage() {\r\n        localStorage.setItem(\"Value\", valueInput);\r\n    }\r\n\r\n    function loadLocalStorage() {\r\n        if (localStorage.getItem(\"OID\") !== \"undefined\") {\r\n            setOidInput(localStorage.getItem(\"OID\"));\r\n        }\r\n        if (localStorage.getItem(\"Value\") !== \"undefined\") {\r\n            setValueInput(localStorage.getItem(\"Value\"));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"contentContainer mainInput\">\r\n            <div className=\"inputs\">\r\n                <div className=\"inputContainer\">\r\n                    <h3>OID</h3>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={oidInput}\r\n                        onChange={oidInputHandler}\r\n                        placeholder=\"ex. 1.3.6.1.2.1.1.5.0\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"inputContainer\">\r\n                    <h3>Value</h3>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={valueInput}\r\n                        onChange={valueInputHandler}\r\n                        placeholder=\"ex. Router 5550\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"inputContainer community\">\r\n                    <h3>Community</h3>\r\n                    <input\r\n                        type={communityInput === \"public\" ? \"text\" : \"password\"}\r\n                        value={communityInput}\r\n                        onChange={communityInputHandler}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"iconButtons\">\r\n                <div className=\"iconButton\">\r\n                    <img src={getIcon} alt=\"get\" onClick={get} />\r\n                </div>\r\n                <div className=\"iconButton\">\r\n                    <img src={treeIcon} alt=\"walk\" onClick={subtree} />\r\n                </div>\r\n                <div className=\"iconButton\">\r\n                    <img src={setIcon} alt=\"set\" onClick={set} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ButtonLink from \"./ButtonLink\";\r\nimport IpIcon from \"../Images/ip-icon.svg\";\r\n\r\nexport default function IpInput(props) {\r\n    const [valid, setValid] = useState(false);\r\n    const [input, setInput] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        if (validateIPaddress(input)) setValid(true);\r\n        else setValid(false);\r\n    }, [input]);\r\n\r\n    useEffect(() => {\r\n        setInput(props.ip);\r\n    }, []);\r\n\r\n    function inputChange(e) {\r\n        setInput(e.target.value);\r\n    }\r\n\r\n    function validateIPaddress(ipaddress) {\r\n        if (\r\n            /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(\r\n                ipaddress\r\n            )\r\n        ) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"exploreContent inputLeft contentContainer\">\r\n            <div className=\"description\">\r\n                <h3>{props.title}</h3>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"ex. 127.0.0.1\"\r\n                    onChange={inputChange}\r\n                    value={input}\r\n                />\r\n                <div className={valid ? \"validButton\" : \"novalidButton\"}>\r\n                    <ButtonLink\r\n                        title={props.buttonTitle}\r\n                        link={`/getSubtreeSet/${input}`}\r\n                        valid={valid}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <img src={IpIcon} alt=\"ip icon\" />\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function ReplyTable({ tableContent }) {\r\n    return (\r\n        <div className=\"contentContainer table\">\r\n            <h3>Reply</h3>\r\n            <table>\r\n                <thead>\r\n                    <tr className=\"header\">\r\n                        <th>\r\n                            <p>IP Address</p>\r\n                        </th>\r\n                        <th>\r\n                            <p>OID</p>\r\n                        </th>\r\n                        <th>\r\n                            <p>Type</p>\r\n                        </th>\r\n                        <th>\r\n                            <p>Value</p>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                {tableContent}\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/codeicon.ef94cb46.svg\";","export default __webpack_public_path__ + \"static/media/position-icon.9aa44208.svg\";","export default __webpack_public_path__ + \"static/media/contact-icon.f9dbf0ad.svg\";","export default __webpack_public_path__ + \"static/media/write-icon.f0cde616.svg\";","export default __webpack_public_path__ + \"static/media/time-icon.1d0ea811.svg\";","export default __webpack_public_path__ + \"static/media/finger-icon.62424874.svg\";","import React, { useEffect, useState } from \"react\";\r\nimport InformationContent from \"./InformationContent\";\r\nimport MainInput from \"./MainInput\";\r\nimport IpInput from \"./IpInput\";\r\nimport ReplyTable from \"./ReplyTable\";\r\nimport computer from \"../Images/codeicon.svg\";\r\nimport position from \"../Images/position-icon.svg\";\r\nimport contact from \"../Images/contact-icon.svg\";\r\nimport write from \"../Images/write-icon.svg\";\r\nimport time from \"../Images/time-icon.svg\";\r\nimport finger from \"../Images/finger-icon.svg\";\r\n\r\nexport default function GetSubtreeSetIp({match }) {\r\n    const [valid, setValid] = useState(false);\r\n    const [basicContainers, setBasicContainers] = useState([]);\r\n    const [reachable, setReachable] = useState(false);\r\n    const [tableContent, setTableContent] = useState([]);\r\n    const [key, setKey] = useState(-1);\r\n\r\n    const images = [computer, position, contact, write, time, finger];\r\n\r\n    useEffect(() => {\r\n        setValid(validateIPaddress(match.params.ip));\r\n        checkSnmp();\r\n    }, [match.params.ip]);\r\n\r\n    useEffect(() => {\r\n        if (reachable) fetchBasics();\r\n    }, [reachable]);\r\n\r\n    async function checkSnmp() {\r\n        const url = `http://localhost:3001/checkIP/${match.params.ip}`;\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        setReachable();\r\n        setReachable(data.snmp);\r\n    }\r\n\r\n    async function fetchBasics() {\r\n        const url = `http://localhost:3001/getBasics/${match.params.ip}`;\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n\r\n        let i = -1;\r\n        setBasicContainers([]);\r\n        setBasicContainers(\r\n            data.map((element) => {\r\n                i++;\r\n                return (\r\n                    <InformationContent\r\n                        src={images[i]}\r\n                        name={element.name}\r\n                        value={element.value}\r\n                        oid={element.oid}\r\n                        key={element.oid}\r\n                    />\r\n                );\r\n            })\r\n        );\r\n    }\r\n\r\n    function validateIPaddress(ipaddress) {\r\n        if (\r\n            /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(\r\n                ipaddress\r\n            )\r\n        ) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <div className={valid ? `main` : `main error`}>\r\n            <h1>\r\n                {valid\r\n                    ? `Get, Subtree and Walk: ${match.params.ip}`\r\n                    : \"Error: IP Address is not valid\"}\r\n            </h1>\r\n            {reachable ? (\r\n                <div>\r\n                    <div className=\"informationContainers\">\r\n                        {basicContainers}\r\n                    </div>\r\n                    <div className=\"middleContainer\">\r\n                        <MainInput\r\n                            ip={match.params.ip}\r\n                            tableContent={tableContent}\r\n                            setTableContent={setTableContent}\r\n                            key = {key}\r\n                            setKey = {setKey}\r\n                            fetchBasics = {fetchBasics}\r\n                        />\r\n                        <IpInput\r\n                            buttonTitle=\"Change\"\r\n                            title=\"Change IP\"\r\n                            ip={match.params.ip}\r\n                        />\r\n                    </div>\r\n\r\n                    <ReplyTable tableContent={tableContent} />\r\n                </div>\r\n            ) : (\r\n                <div>\r\n                    <h1 className=\"error\">\r\n                        Not able to connect to {match.params.ip}\r\n                    </h1>\r\n                    <IpInput\r\n                        buttonTitle=\"Change\"\r\n                        title=\"Change IP\"\r\n                        ip={match.params.ip}\r\n                    />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/scan-radar-icon.bd0cbd60.svg\";","import React, { useState, useEffect } from \"react\";\r\nimport IpIcon from \"../Images/scan-radar-icon.svg\";\r\n\r\nexport default function NetworkInput({\r\n    input,\r\n    setInput,\r\n    fetchData,\r\n    setLoading,\r\n}) {\r\n    const [valid, setValid] = useState(false);\r\n    const [changeInput, setChangeInput] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (changeInput) saveToLocalStorage();\r\n        if (validateIPaddress(input)) setValid(true);\r\n        else setValid(false);\r\n    }, [input]);\r\n\r\n    useEffect(() => {\r\n        loadLocalStorage();\r\n    }, []);\r\n\r\n    function inputChange(e) {\r\n        setChangeInput(true);\r\n        setInput(e.target.value);\r\n    }\r\n\r\n    function saveToLocalStorage() {\r\n        localStorage.setItem(\"IPInput\", input);\r\n    }\r\n\r\n    function loadLocalStorage() {\r\n        if (localStorage.getItem(\"IPInput\") !== \"undefined\") {\r\n            setInput(localStorage.getItem(\"IPInput\"));\r\n        }\r\n    }\r\n\r\n    function validateIPaddress(ipaddress) {\r\n        if (\r\n            /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.([0])$/.test(\r\n                ipaddress\r\n            )\r\n        ) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function callApi() {\r\n        setLoading(true);\r\n        if (valid) {\r\n            fetchData();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"exploreContent input contentContainer\">\r\n            <img  className=\"ScanIP\" src={IpIcon} alt=\"scane\" />\r\n            <div className=\"description\">\r\n                <div className=\"inputsNetwork\">\r\n                    <div>\r\n                        <h3>Network</h3>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"ex. 10.10.30.0\"\r\n                            onChange={inputChange}\r\n                            value={input}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <h3>Mask</h3>\r\n                        <select id=\"mask\">\r\n                            <option value=\"24\">24</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                <div\r\n                    className={valid ? \"validButton\" : \"novalidButton\"}\r\n                    onClick={callApi}\r\n                >\r\n                    <button className=\"buttonLink\">Scan</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function ScanNetworkTable({ tableContent, loading }) {\r\n    return (\r\n        <div className=\"contentContainer table networkTable\">\r\n            <h3>Devices</h3>\r\n            <table>\r\n                <thead>\r\n                    <tr className=\"header\">\r\n                        <th>\r\n                            <p>IP Address</p>\r\n                        </th>\r\n                        <th>\r\n                            <p>Network</p>\r\n                        </th>\r\n                        <th>\r\n                            <p>SNMP</p>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                {tableContent}\r\n            </table>\r\n            {loading ? (\r\n                <div className=\"loader\">\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                </div>\r\n            ) : (\r\n                <div></div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function ScanNetworkTableElement({ ip, network}) {\r\n    const [reachable, setReachable] = useState(false);\r\n\r\n    useEffect(() => checkSnmp(), []);\r\n\r\n    async function checkSnmp() {\r\n        const url = `http://localhost:3001/checkIP/${ip}`;\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        setReachable(data.snmp);\r\n    }\r\n\r\n    return (\r\n        <tbody className={`${reachable}`}>\r\n            <tr>\r\n                <td>\r\n                    {reachable ? (\r\n                        <Link to={`/getSubtreeSet/${ip}`}  >\r\n                            <p>{ip}</p>\r\n                        </Link>\r\n                    ) : (\r\n                        <p>{ip}</p>\r\n                    )}\r\n                </td>\r\n                <td>\r\n                    {reachable ? (\r\n                        <Link to={`/getSubtreeSet/${ip}`}>\r\n                            <p>{network}</p>\r\n                        </Link>\r\n                    ) : (\r\n                        <p>{network}</p>\r\n                    )}\r\n                </td>\r\n                <td>\r\n                    {reachable ? (\r\n                        <Link to={`/getSubtreeSet/${ip}`}>\r\n                            <p>{`${reachable}`}</p>\r\n                        </Link>\r\n                    ) : (\r\n                        <p>{`${reachable}`}</p>\r\n                    )}\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport NetworkInput from \"./NetworkInput\";\r\nimport ScanNetworkTable from \"./ScanNetworkTable\";\r\nimport ScanNetworkTableElement from \"./ScanNetworkTableElement\";\r\n\r\nexport default function ScanNetwork({ tableContent, setTableContent }) {\r\n    const [input, setInput] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    async function fetchData() {\r\n        const url = `http://localhost:3001/scanNetwork/${input}/24`;\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n\r\n        setTableContent(\r\n            data.map((element) => {\r\n                return (\r\n                    <ScanNetworkTableElement\r\n                        ip={element.host}\r\n                        network={element.network}\r\n                        snmp=\"true\"\r\n                        key={element.host + element.network}\r\n                    />\r\n                );\r\n            })\r\n        );\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <h1>Scan Network</h1>\r\n            <NetworkInput\r\n                input={input}\r\n                setInput={setInput}\r\n                fetchData={fetchData}\r\n                setLoading={setLoading}\r\n            />\r\n            <ScanNetworkTable tableContent={tableContent} loading={loading} />\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport Button from \"../Compontents/ButtonA\"\r\n\r\nexport default function ErrorLeiste({available}) {\r\n    return (\r\n        <div className={available ? \"fadeOut errorLeiste\" : \"fadeIn errorLeiste\"}>\r\n            <h1>Please start the SERVER to use the functionalities</h1>\r\n            <div className=\"downloadArea\">\r\n                <p>Download the \"SNMP WEB Server\" here</p>\r\n                <Button\r\n                    title=\"Download\"\r\n                    link=\"https://github.com/beniaminterza/SNMP-Tool-Node\"\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function TrapsTable({ tableContent }) {\r\n    return (\r\n        <div className=\"contentContainer table networkTable\">\r\n            <h3>Traps</h3>\r\n            <table>\r\n                <thead>\r\n                    <tr className=\"header\">\r\n                        <th>\r\n                            <p>IP Address</p>\r\n                        </th>\r\n                        <th>\r\n                            <p>OID</p>\r\n                        </th>\r\n                        <th>\r\n                            <p>Value</p>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                {tableContent}\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function TrapsTableElement({ ip, oid, value }) {\r\n    return (\r\n        <tbody className=\"trap\">\r\n            <tr>\r\n                <td>\r\n                    <p>{ip}</p>\r\n                </td>\r\n                <td>\r\n                    <p>{oid}</p>\r\n                </td>\r\n                <td>\r\n                    <p>{value}</p>\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport TrapsTable from \"../Compontents/TrapsTable\";\r\nimport TrapsTableElement from \"../Compontents/TrapsTableElement\";\r\n\r\nexport default function Traps({ available }) {\r\n    const [tableContent, setTableContent] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, [tableContent]);\r\n\r\n    useEffect(() => {\r\n        if (available) {\r\n            fetchData();\r\n        }\r\n    }, [available]);\r\n\r\n    async function fetchData() {\r\n        console.log(\"waiting\");\r\n        const url = `http://localhost:3002/traps`;\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        console.log(data.varbinds);\r\n        setTableContent([\r\n            data.varbinds.map((element) => {\r\n                return (\r\n                    <TrapsTableElement\r\n                        ip={data.ip}\r\n                        oid={element.oid}\r\n                        value={element.value}\r\n                        key={Math.random() * 1000}\r\n                    />\r\n                );\r\n            }),\r\n            ...tableContent,\r\n        ]);\r\n    }\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <h1>Traps</h1>\r\n            <TrapsTable tableContent={tableContent} />\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport SideBar from \"./Compontents/Sidebar\";\r\nimport Home from \"./Compontents/Home\";\r\nimport Setting from \"./Compontents/Setting\";\r\nimport GetSubtreeSet from \"./Compontents/GetSubtreeSet\";\r\nimport GetSubtreeSetIp from \"./Compontents/GetSubtreeSetIp\";\r\nimport ScanNetwork from \"./Compontents/ScanNetwork\";\r\nimport ErrorLeiste from \"./Compontents/ErrorLeiste\";\r\nimport Traps from \"./Compontents/Traps\";\r\nimport \"./Style/Basic.css\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nexport default function App({ match }) {\r\n    const [url, setUrl] = useState(window.location.pathname); //for the navigation color\r\n    const [tableContent, setTableContent] = useState([]);\r\n    const [available, setAvailable] = useState(false);\r\n    const [timeout, setTimeouts] = useState(\"1000\");\r\n\r\n    useEffect(() => {\r\n        if (url.includes(\"/getSubtreeSet/\")) setUrl(\"/getSubtreeSet\");\r\n    }, [url]);\r\n\r\n    return (\r\n        <Router>\r\n            <div className=\"app\">\r\n                <ErrorLeiste\r\n                    available={available}\r\n                    setAvailable={setAvailable}\r\n                />\r\n                <SideBar\r\n                    url={url}\r\n                    setUrl={setUrl}\r\n                    available={available}\r\n                    setAvailable={setAvailable}\r\n                />\r\n                <Switch>\r\n                    <Route path=\"/SNMP-REACT-Client\" exact component={Home} />\r\n                    <Route path=\"/getSubtreeSet\" exact>\r\n                        <GetSubtreeSet setUrl={setUrl} />\r\n                    </Route>\r\n                    <Route\r\n                        path=\"/getSubtreeSet/:ip\"\r\n                        component={GetSubtreeSetIp}\r\n                    />\r\n                    <Route path=\"/scanNetwork\">\r\n                        <ScanNetwork\r\n                            tableContent={tableContent}\r\n                            setTableContent={setTableContent}\r\n                        />\r\n                    </Route>\r\n                    <Route path=\"/settings\">\r\n                        <Setting timeout={timeout} setTimeouts={setTimeouts} />\r\n                    </Route>\r\n                    <Route path=\"/traps\">\r\n                        <Traps available={available} />\r\n                    </Route>\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}